package com.onudapps.proman.contracts;

import io.reactivex.Flowable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.*;
import org.web3j.abi.datatypes.generated.Int32;
import org.web3j.abi.datatypes.generated.Int64;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.*;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.2.0.
 */
public class Smart extends Contract {
    private static final String BINARY = "0x6080604052600080546001608060020a031916905534801561002057600080fd5b5061325a806100306000396000f3fe6080604052600436106101945763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166280f19781146101995780631274290214610258578063381468e814610397578063385e17db1461047d57806339d2ff17146104ac57806347278ab6146105d157806354272d94146106075780635bc4ec8b146106355780635be138901461064a5780636320b3f8146107075780636a5baba1146107435780637837620f1461080f5780637b1b664a1461084b5780637dc03f74146108f357806380caf07d1461090857806384dc3886146109c5578063884eaab514610a7757806389406afe14610a8c5780639e4cda4314610ac2578063ac85f7f714610aeb578063adcfb4fc14610c30578063bf4a246714610ce3578063cb9d8c5c14610da0578063ce8823a514610e53578063cfcef2d214610f10578063d7d3d02b14610f3d578063dd583bce14610f73578063de0040be14610fa9578063e778371714610fe5578063eac25d811461101c578063f8f3378e14611081578063fc0a5e91146110ae575b600080fd5b3480156101a557600080fd5b506101c6600480360360208110156101bc57600080fd5b503560030b6110db565b60405180806020018460070b60070b81526020018360070b60070b8152602001828103825285818151815260200191508051906020019080838360005b8381101561021b578181015183820152602001610203565b50505050905090810190601f1680156102485780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561026457600080fd5b506102856004803603602081101561027b57600080fd5b503560030b6112df565b604051808760030b60030b815260200180602001806020018660070b60070b81526020018560070b60070b81526020018460030b60030b8152602001838103835288818151815260200191508051906020019080838360005b838110156102f65781810151838201526020016102de565b50505050905090810190601f1680156103235780820380516001836020036101000a031916815260200191505b50838103825287518152875160209182019189019080838360005b8381101561035657818101518382015260200161033e565b50505050905090810190601f1680156103835780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b3480156103a357600080fd5b506103c4600480360360208110156103ba57600080fd5b503560030b611451565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156104055781810151838201526020016103ed565b50505050905090810190601f1680156104325780820380516001836020036101000a031916815260200191505b508381038252845181528451602091820191808701910280838360005b8381101561046757818101518382015260200161044f565b5050505090500194505050505060405180910390f35b34801561048957600080fd5b506104aa600480360360208110156104a057600080fd5b503560030b6115af565b005b3480156104b857600080fd5b506104d9600480360360208110156104cf57600080fd5b503560030b6115fa565b6040518080602001806020018560070b60070b81526020018460070b60070b8152602001838103835287818151815260200191508051906020019080838360005b8381101561053257818101518382015260200161051a565b50505050905090810190601f16801561055f5780820380516001836020036101000a031916815260200191505b50838103825286518152865160209182019188019080838360005b8381101561059257818101518382015260200161057a565b50505050905090810190601f1680156105bf5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b3480156105dd57600080fd5b506104aa600480360360408110156105f457600080fd5b50803560030b906020013560070b6117d2565b34801561061357600080fd5b5061061c611824565b60408051600392830b90920b8252519081900360200190f35b34801561064157600080fd5b5061061c611835565b34801561065657600080fd5b506104aa6004803603604081101561066d57600080fd5b813560030b919081019060408101602082013564010000000081111561069257600080fd5b8201836020820111156106a457600080fd5b803590602001918460018302840111640100000000831117156106c657600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061183e945050505050565b34801561071357600080fd5b506104aa6004803603604081101561072a57600080fd5b50600160a060020a03813516906020013560030b61186c565b34801561074f57600080fd5b506107706004803603602081101561076657600080fd5b503560030b6119e8565b604051808560030b60030b8152602001806020018460070b60070b81526020018360070b60070b8152602001828103825285818151815260200191508051906020019080838360005b838110156107d15781810151838201526020016107b9565b50505050905090810190601f1680156107fe5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561081b57600080fd5b506104aa6004803603604081101561083257600080fd5b50803560030b9060200135600160a060020a0316611ab0565b34801561085757600080fd5b5061087e6004803603602081101561086e57600080fd5b5035600160a060020a0316611cdd565b6040805160208082528351818301528351919283929083019185019080838360005b838110156108b85781810151838201526020016108a0565b50505050905090810190601f1680156108e55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156108ff57600080fd5b5061061c611da7565b34801561091457600080fd5b506104aa6004803603604081101561092b57600080fd5b813560030b919081019060408101602082013564010000000081111561095057600080fd5b82018360208201111561096257600080fd5b8035906020019184600183028401116401000000008311171561098457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611dbc945050505050565b3480156109d157600080fd5b506109f2600480360360208110156109e857600080fd5b503560030b611ff2565b604051808360030b60030b815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610a3b578181015183820152602001610a23565b50505050905090810190601f168015610a685780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b348015610a8357600080fd5b5061061c61209e565b348015610a9857600080fd5b506104aa60048036036040811015610aaf57600080fd5b50803560030b906020013560070b6120b7565b348015610ace57600080fd5b50610ad76120f7565b604080519115158252519081900360200190f35b348015610af757600080fd5b50610b1860048036036020811015610b0e57600080fd5b503560030b61210e565b60405180806020018660070b60070b81526020018560070b60070b81526020018060200180602001848103845289818151815260200191508051906020019080838360005b83811015610b75578181015183820152602001610b5d565b50505050905090810190601f168015610ba25780820380516001836020036101000a031916815260200191505b508481038352865181528651602091820191808901910280838360005b83811015610bd7578181015183820152602001610bbf565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610c16578181015183820152602001610bfe565b505050509050019850505050505050505060405180910390f35b348015610c3c57600080fd5b506104aa60048036036020811015610c5357600080fd5b810190602081018135640100000000811115610c6e57600080fd5b820183602082011115610c8057600080fd5b80359060200191846001830284011164010000000083111715610ca257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612324945050505050565b348015610cef57600080fd5b506104aa60048036036040811015610d0657600080fd5b813560030b9190810190604081016020820135640100000000811115610d2b57600080fd5b820183602082011115610d3d57600080fd5b80359060200191846001830284011164010000000083111715610d5f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612429945050505050565b348015610dac57600080fd5b506104aa60048036036020811015610dc357600080fd5b810190602081018135640100000000811115610dde57600080fd5b820183602082011115610df057600080fd5b80359060200191846001830284011164010000000083111715610e1257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612452945050505050565b348015610e5f57600080fd5b506104aa60048036036040811015610e7657600080fd5b813560030b9190810190604081016020820135640100000000811115610e9b57600080fd5b820183602082011115610ead57600080fd5b80359060200191846001830284011164010000000083111715610ecf57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506126b2945050505050565b348015610f1c57600080fd5b506104aa60048036036020811015610f3357600080fd5b503560030b61282c565b348015610f4957600080fd5b506104aa60048036036040811015610f6057600080fd5b50803560030b906020013560070b6129ca565b348015610f7f57600080fd5b506104aa60048036036040811015610f9657600080fd5b50803560030b906020013560070b612a1d565b348015610fb557600080fd5b506104aa60048036036040811015610fcc57600080fd5b50600160a060020a03813516906020013560030b612a5c565b348015610ff157600080fd5b506104aa6004803603604081101561100857600080fd5b508035600390810b9160200135900b612bad565b34801561102857600080fd5b50611031612c55565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561106d578181015183820152602001611055565b505050509050019250505060405180910390f35b34801561108d57600080fd5b50611031600480360360208110156110a457600080fd5b503560030b612cdf565b3480156110ba57600080fd5b506104aa600480360360208110156110d157600080fd5b503560030b612d6f565b60606000806110e8612ebe565b600385810b810b600090815260016020818152604092839020835160c0810185528154860b860b90950b855280830180548551600261010096831615969096026000190190911694909404601f81018490048402850184019095528484529093858301939283018282801561119e5780601f106111735761010080835404028352916020019161119e565b820191906000526020600020905b81548152906001019060200180831161118157829003601f168201915b505050505081526020016002820160009054906101000a900460070b60070b60070b81526020016002820160089054906101000a900460070b60070b60070b81526020016003820180548060200260200160405190810160405280929190818152602001828054801561123a57602002820191906000526020600020905b8154600160a060020a0316815260019091019060200180831161121c575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156112b857602002820191906000526020600020906000905b82829054906101000a900460030b60030b815260200190600401906020826003010492830192600103820291508084116112815790505b50505091909252505050602081015160408201516060909201519097919650945092505050565b6003602081815260009283526040928390208054600180830180548751600261010094831615949094026000190190911692909204601f81018690048602830186019097528682529190940b949193929091908301828280156113835780601f1061135857610100808354040283529160200191611383565b820191906000526020600020905b81548152906001019060200180831161136657829003601f168201915b50505060028085018054604080516020601f60001961010060018716150201909416959095049283018590048502810185019091528181529596959450909250908301828280156114155780601f106113ea57610100808354040283529160200191611415565b820191906000526020600020905b8154815290600101906020018083116113f857829003601f168201915b505050506003928301549192600783810b9368010000000000000000810490910b92507001000000000000000000000000000000009004900b86565b60608061145c612ef2565b600384810b810b60009081526002602081815260409283902083516060810185528154860b860b90950b85526001808201805486516101009382161593909302600019011694909404601f810184900484028201840190955284815290938583019391928301828280156115115780601f106114e657610100808354040283529160200191611511565b820191906000526020600020905b8154815290600101906020018083116114f457829003601f168201915b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561158f57602002820191906000526020600020906000905b82829054906101000a900460030b60030b815260200190600401906020826003010492830192600103820291508084116115585790505b505050919092525050506020810151604090910151909350915050915091565b6115b9338261186c565b6115c33382612a5c565b604080516001815290517ff8fc2d154446e315941a028488baf3204c5ef227c4ac71004de6446b7630d0929181900360200190a150565b606080600080611608612f17565b600386810b810b60009081526020828152604091829020825160c0810184528154850b850b90940b8452600180820180548551600261010094831615949094026000190190911692909204601f81018590048502830185019095528482529193858401939192918301828280156116c05780601f10611695576101008083540402835291602001916116c0565b820191906000526020600020905b8154815290600101906020018083116116a357829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156117525780601f1061172757610100808354040283529160200191611752565b820191906000526020600020905b81548152906001019060200180831161173557829003601f168201915b5050509183525050600391820154600781810b810b810b602080850191909152680100000000000000008304820b820b90910b604080850191909152700100000000000000000000000000000000909204840b840b90930b6060928301529183015191830151908301516080909301519199909850919650945092505050565b600391820b820b6000908152602083905260409020909101805460079290920b67ffffffffffffffff1668010000000000000000026fffffffffffffffff000000000000000019909216919091179055565b600054640100000000900460030b81565b60005460030b81565b600382810b810b6000908152602091825260409020825161186792600190920191840190612f4d565b505050565b600160a060020a03821660009081526004602052604081209080805b60028401548110156118e9578460030b84600201828154811015156118a957fe5b90600052602060002090600891828204019190066004029054906101000a900460030b60030b14156118e157809150600192506118e9565b600101611888565b5081156119e157600181015b600284015481101561198b576002840180548290811061191157fe5b90600052602060002090600891828204019190066004029054906101000a900460030b846002016001830381548110151561194857fe5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360030b63ffffffff16021790555080806001019150506118f5565b5060028301805460001981019081106119a057fe5b90600052602060002090600891828204019190066004026101000a81549063ffffffff0219169055826002018054809190600190036119df9190612fcb565b505b5050505050565b600160208181526000928352604092839020805481840180548651600261010097831615979097026000190190911695909504601f810185900485028601850190965285855260039190910b94919392909190830182828015611a8c5780601f10611a6157610100808354040283529160200191611a8c565b820191906000526020600020905b815481529060010190602001808311611a6f57829003601f168201915b50505060029093015491925050600781810b91680100000000000000009004900b84565b600382810b900b600090815260016020908152604080832033845260050190915290205460ff168015611afb5750600160a060020a03811660009081526004602052604090205460ff165b8015611b345750600382810b900b6000908152600160209081526040808320600160a060020a038516845260050190915290205460ff16155b15611c9d57600382810b80820b600090815260016020818152604080842095860180548085018255908552828520018054600160a060020a03891673ffffffffffffffffffffffffffffffffffffffff19909116811790915580855260059096018252808420805460ff19168417905560048083528185206002808201805480880182559088528588206008820401805463ffffffff9a8b16600790931690950261010090810a9283029a909202199094169890981790925596909452805182815295830180549384161590950260001901909216929092049184018290527fd6d8568f98742611058036b67bd50f6f100a78c721c7c24bdc98c41f0bc721569391829182019084908015611c8a5780601f10611c5f57610100808354040283529160200191611c8a565b820191906000526020600020905b815481529060010190602001808311611c6d57829003601f168201915b50509250505060405180910390a1611cd9565b60408051602080825260009082015290517fd6d8568f98742611058036b67bd50f6f100a78c721c7c24bdc98c41f0bc721569181900360600190a15b5050565b60606004600083600160a060020a0316600160a060020a031681526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d9b5780601f10611d7057610100808354040283529160200191611d9b565b820191906000526020600020905b815481529060010190602001808311611d7e57829003601f168201915b50505050509050919050565b60005468010000000000000000900460030b81565b611dc4612f17565b506040805160c081018252600080546c0100000000000000000000000090819004600390810b810b8085526020808601888152875180830189528681528789015260001960608801819052608088015289840b60a08801819052840b86526002808352888720018054600180820183559188528388206008820401805460079092166004026101000a63ffffffff818102199093169683160295909517909455865495909504840b840b840b8652838252969094208551815463ffffffff1916930b90911691909117815593518051939485949093611ea7938501920190612f4d565b5060408201518051611ec3916002840191602090910190612f4d565b50606082015160039182018054608085015160a090950151840b63ffffffff167001000000000000000000000000000000000273ffffffff0000000000000000000000000000000019600796870b67ffffffffffffffff90811668010000000000000000026fffffffffffffffff0000000000000000199690980b1667ffffffffffffffff199093169290921793909316949094179390931617909155600054604080516c01000000000000000000000000909204830b830b90920b815290517f6be49f4d1712d0fb22da3e4c1396a3e80a71bca29e577dbef8001fb4e5f15be79181900360200190a15050600080546fffffffff00000000000000000000000019811663ffffffff6c0100000000000000000000000092839004600390810b600101900b1690910217905550565b6002602081815260009283526040928390208054600180830180548751601f6000199483161561010002949094019091169690960491820185900485028601850190965280855260039190910b949193928301828280156120945780601f1061206957610100808354040283529160200191612094565b820191906000526020600020905b81548152906001019060200180831161207757829003601f168201915b5050505050905082565b6000546c01000000000000000000000000900460030b81565b600391820b90910b6000908152600160205260409020600201805460079290920b67ffffffffffffffff1667ffffffffffffffff19909216919091179055565b3360009081526004602052604090205460ff165b90565b606060008060608061211e612ebe565b600387810b810b600090815260016020818152604092839020835160c0810185528154860b860b90950b855280830180548551600261010096831615969096026000190190911694909404601f8101849004840285018401909552848452909385830193928301828280156121d45780601f106121a9576101008083540402835291602001916121d4565b820191906000526020600020905b8154815290600101906020018083116121b757829003601f168201915b505050505081526020016002820160009054906101000a900460070b60070b60070b81526020016002820160089054906101000a900460070b60070b60070b81526020016003820180548060200260200160405190810160405280929190818152602001828054801561227057602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311612252575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156122ee57602002820191906000526020600020906000905b82829054906101000a900460030b60030b815260200190600401906020826003010492830192600103820291508084116122b75790505b5050509190925250505060208101516040820151606083015160a0840151608090940151929b919a509850919650945092505050565b3360009081526004602052604090205460ff1615156123f15760408051606081018252600180825260208083018581528451600080825281840187528587019190915233815260048352949094208351815460ff191690151517815593518051939493612398938501929190910190612f4d565b50604082015180516123b4916002840191602090910190612fff565b5050604080516001815290517f0dffc5dd87b3acdefad39a6649ed27bf4830bcf3374c54d5140fdd15eebd553992509081900360200190a1612426565b604080516000815290517f0dffc5dd87b3acdefad39a6649ed27bf4830bcf3374c54d5140fdd15eebd55399181900360200190a15b50565b600382810b810b6000908152602091825260409020825161186792600290920191840190612f4d565b6040805160c081018252600080546401000000009004600390810b810b808452602080850187815260001986880181905260608701528651858152808301885260808701528651858152808301885260a087015291830b84526001808252959093208451815463ffffffff191663ffffffff9190940b16929092178255518051939491936124e893928501929190910190612f4d565b506040820151600282018054606085015167ffffffffffffffff19909116600793840b67ffffffffffffffff908116919091176fffffffffffffffff00000000000000001916680100000000000000009290940b16029190911790556080820151805161255f9160038401916020909101906130ad565b5060a0820151805161257b916004840191602090910190612fff565b50506000805464010000000090819004600390810b810b810b835260016020818152604080862084018054808501825590875282872001805473ffffffffffffffffffffffffffffffffffffffff1916339081179091558654869004850b850b850b87528187209087526005018252808620805460ff1916841790556004808352818720875460029091018054958601815588528388206008860401805491889004870b870b63ffffffff90811660079097169093026101000a9586029290950219161790925593548151939004820b820b90910b8252517faedc68e9a9eb366b79839e0b46c3f2d1a3b9eec9c785ec3bd3fcb50f2322aa6d93509081900390910190a1506000805467ffffffff0000000019811663ffffffff64010000000092839004600390810b600101900b16909102179055565b6126ba612ef2565b5060408051606081018252600080546801000000000000000090819004600390810b810b8085526020808601888152875186815280830189528789015289840b840b865260018083528887206004908101805480840182559089528489206008820401805460079092169092026101000a63ffffffff8181021990921696821602959095179055865495909504840b840b840b865260028252969094208551815463ffffffff1916930b90911691909117815593518051939485949093612785938501920190612f4d565b50604082015180516127a1916002840191602090910190612fff565b50506000546040805168010000000000000000909204600390810b810b900b8252517facdbba31b030f49229d93f7468a1df7733eeb8f4b8f707dbafa0b7a53dfe212592509081900360200190a15050600080546bffffffff000000000000000019811663ffffffff6801000000000000000092839004600390810b600101900b1690910217905550565b600381810b810b6000908152602082815260408083208401547001000000000000000000000000000000009004840b840b90930b8252600290529081209080805b60028401548110156128ce578460030b846002018281548110151561288e57fe5b90600052602060002090600891828204019190066004029054906101000a900460030b60030b14156128c657809150600192506128ce565b60010161286d565b5081156129c457600181015b600284015481101561297057600284018054829081106128f657fe5b90600052602060002090600891828204019190066004029054906101000a900460030b846002016001830381548110151561292d57fe5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360030b63ffffffff16021790555080806001019150506128da565b50600283018054600019810190811061298557fe5b90600052602060002090600891828204019190066004026101000a81549063ffffffff0219169055826002018054809190600190036119e19190612fcb565b50505050565b600391820b90910b6000908152600160205260409020600201805460079290920b67ffffffffffffffff1668010000000000000000026fffffffffffffffff000000000000000019909216919091179055565b600391820b820b6000908152602083905260409020909101805460079290920b67ffffffffffffffff1667ffffffffffffffff19909216919091179055565b600381810b900b60009081526001602052604081209080805b6003840154811015612acb5785600160a060020a03168460030182815481101515612a9c57fe5b600091825260209091200154600160a060020a03161415612ac35780915060019250612acb565b600101612a75565b5081156119e157600181015b6003840154811015612b5d5760038401805482908110612af357fe5b600091825260209091200154600385018054600160a060020a03909216916000198401908110612b1f57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600101612ad7565b506003830180546000198101908110612b7257fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff19169055600383018054906119df90600019830161311b565b612bb68261282c565b600391820b80830b6000908152602084815260408083208601805473ffffffff00000000000000000000000000000000191670010000000000000000000000000000000063ffffffff97890b888116919091029190911790915590950b8252600280825294822090940180546001810182559082529390206008840401805460079094166004026101000a808402199094169290911692909202179055565b33600090815260046020908152604091829020600201805483518184028101840190945280845260609392830182828015612cd557602002820191906000526020600020906000905b82829054906101000a900460030b60030b81526020019060040190602082600301049283019260010382029150808411612c9e5790505b5050505050905090565b600381810b900b600090815260016020908152604091829020600401805483518184028101840190945280845260609392830182828015611d9b57602002820191906000526020600020906000905b82829054906101000a900460030b60030b81526020019060040190602082600301049283019260010382029150808411612d2e575094979650505050505050565b600381810b900b6000908152600160209081526040808320338452600581019092529091205460ff1615612e865760005b6003820154811015612de357612ddb8260030182815481101515612dc057fe5b600091825260209091200154600160a060020a03168461186c565b600101612da0565b50600382810b900b60009081526001602081905260408220805463ffffffff191681559190612e149083018261313f565b6002820180546fffffffffffffffffffffffffffffffff19169055612e3d600383016000613183565b612e4b6004830160006131a1565b5050604080516001815290517f2ba7d88b70a50545812b72874f1c186473c9d50d28e9e907f3ed2a7bc5baed459181900360200190a1611cd9565b604080516000815290517f2ba7d88b70a50545812b72874f1c186473c9d50d28e9e907f3ed2a7bc5baed459181900360200190a15050565b6040805160c0810182526000808252606060208301819052928201819052828201526080810182905260a081019190915290565b606060405190810160405280600060030b815260200160608152602001606081525090565b6040805160c08101825260008082526060602083018190529282018390529181018290526080810182905260a081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612f8e57805160ff1916838001178555612fbb565b82800160010185558215612fbb579182015b82811115612fbb578251825591602001919060010190612fa0565b50612fc79291506131c2565b5090565b81548183558181111561186757600701600890048160070160089004836000526020600020918201910161186791906131c2565b828054828255906000526020600020906007016008900481019282156130a15791602002820160005b8382111561306f57835183826101000a81548163ffffffff021916908360030b63ffffffff1602179055509260200192600401602081600301049283019260010302613028565b801561309f5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261306f565b505b50612fc79291506131dc565b82805482825590600052602060002090810192821561310f579160200282015b8281111561310f578251825473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039091161782556020909201916001909101906130cd565b50612fc79291506131fd565b815481835581811115611867576000838152602090206118679181019083016131c2565b50805460018160011615610100020316600290046000825580601f106131655750612426565b601f01602090049060005260206000209081019061242691906131c2565b508054600082559060005260206000209081019061242691906131c2565b50805460008255600701600890049060005260206000209081019061242691905b61210b91905b80821115612fc757600081556001016131c8565b61210b91905b80821115612fc757805463ffffffff191681556001016131e2565b61210b91905b80821115612fc757805473ffffffffffffffffffffffffffffffffffffffff1916815560010161320356fea165627a7a7230582062ef8f365f192148400899f19d49342653e150f7d61b5fb9839a617747fd7fc10029";

    public static final String FUNC_TASKS = "tasks";

    public static final String FUNC_BOARDSCREATED = "boardsCreated";

    public static final String FUNC_BOARDSCOUNT = "boardsCount";

    public static final String FUNC_BOARDS = "boards";

    public static final String FUNC_GROUPSCREATED = "groupsCreated";

    public static final String FUNC_GROUPS = "groups";

    public static final String FUNC_TASKSCREATED = "tasksCreated";

    public static final String FUNC_ADDBOARD = "addBoard";

    public static final String FUNC_GETUSERNICK = "getUserNick";

    public static final String FUNC_ADDGROUP = "addGroup";

    public static final String FUNC_ADDTASK = "addTask";

    public static final String FUNC_SETTASKDESCRIPTION = "setTaskDescription";

    public static final String FUNC_SETTASKTITLE = "setTaskTitle";

    public static final String FUNC_SETTASKGROUP = "setTaskGroup";

    public static final String FUNC_REMOVETASKFROMGROUP = "removeTaskFromGroup";

    public static final String FUNC_SETTASKSTART = "setTaskStart";

    public static final String FUNC_SETTASKFINISH = "setTaskFinish";

    public static final String FUNC_SETBOARDSTART = "setBoardStart";

    public static final String FUNC_SETBOARDFINISH = "setBoardFinish";

    public static final String FUNC_ADDBOARDPARTICIPANT = "addBoardParticipant";

    public static final String FUNC_SIGNIN = "signIn";

    public static final String FUNC_SIGNUP = "signUp";

    public static final String FUNC_GETBOARD = "getBoard";

    public static final String FUNC_GETBOARDCARD = "getBoardCard";

    public static final String FUNC_GETBOARDSINDICES = "getBoardsIndices";

    public static final String FUNC_GETGROUPSINDICES = "getGroupsIndices";

    public static final String FUNC_GETGROUP = "getGroup";

    public static final String FUNC_GETTASK = "getTask";

    public static final String FUNC_REMOVEBOARDFROMUSER = "removeBoardFromUser";

    public static final String FUNC_REMOVEUSERFROMBOARD = "removeUserFromBoard";

    public static final String FUNC_LEAVEBOARD = "leaveBoard";

    public static final String FUNC_ERASEBOARD = "eraseBoard";

    public static final Event BOARDADDED_EVENT = new Event("boardAdded",
            Arrays.<TypeReference<?>>asList(new TypeReference<Int32>() {}));
    ;

    public static final Event SIGNEDUP_EVENT = new Event("signedUp",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    public static final Event BOARDLEFT_EVENT = new Event("boardLeft",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    public static final Event BOARDREMOVED_EVENT = new Event("boardRemoved",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    public static final Event GROUPADDED_EVENT = new Event("groupAdded",
            Arrays.<TypeReference<?>>asList(new TypeReference<Int32>() {}));
    ;

    public static final Event BOARDPARTICIPANTADDED_EVENT = new Event("boardParticipantAdded",
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
    ;

    public static final Event TASKADDED_EVENT = new Event("taskAdded",
            Arrays.<TypeReference<?>>asList(new TypeReference<Int32>() {}));
    ;

    public static final Event TXCOMMITED_EVENT = new Event("txCommited",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    @Deprecated
    protected Smart(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Smart(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Smart(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Smart(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger>> tasks(BigInteger param0) {
        final Function function = new Function(FUNC_TASKS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int64>() {}, new TypeReference<Int64>() {}, new TypeReference<Int32>() {}));
        return new RemoteCall<Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger>>(
                new Callable<Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue(),
                                (BigInteger) results.get(5).getValue());
                    }
                });
    }

    public RemoteCall<BigInteger> boardsCreated() {
        final Function function = new Function(FUNC_BOARDSCREATED,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int32>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> boardsCount() {
        final Function function = new Function(FUNC_BOARDSCOUNT,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int32>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple4<BigInteger, String, BigInteger, BigInteger>> boards(BigInteger param0) {
        final Function function = new Function(FUNC_BOARDS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int64>() {}, new TypeReference<Int64>() {}));
        return new RemoteCall<Tuple4<BigInteger, String, BigInteger, BigInteger>>(
                new Callable<Tuple4<BigInteger, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple4<BigInteger, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<BigInteger, String, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<BigInteger> groupsCreated() {
        final Function function = new Function(FUNC_GROUPSCREATED,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int32>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple2<BigInteger, String>> groups(BigInteger param0) {
        final Function function = new Function(FUNC_GROUPS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int32>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple2<BigInteger, String>>(
                new Callable<Tuple2<BigInteger, String>>() {
                    @Override
                    public Tuple2<BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<BigInteger, String>(
                                (BigInteger) results.get(0).getValue(),
                                (String) results.get(1).getValue());
                    }
                });
    }

    public RemoteCall<BigInteger> tasksCreated() {
        final Function function = new Function(FUNC_TASKSCREATED,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int32>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public List<BoardAddedEventResponse> getBoardAddedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(BOARDADDED_EVENT, transactionReceipt);
        ArrayList<BoardAddedEventResponse> responses = new ArrayList<BoardAddedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            BoardAddedEventResponse typedResponse = new BoardAddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<BoardAddedEventResponse> boardAddedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, BoardAddedEventResponse>() {
            @Override
            public BoardAddedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(BOARDADDED_EVENT, log);
                BoardAddedEventResponse typedResponse = new BoardAddedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<BoardAddedEventResponse> boardAddedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BOARDADDED_EVENT));
        return boardAddedEventFlowable(filter);
    }

    public List<SignedUpEventResponse> getSignedUpEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SIGNEDUP_EVENT, transactionReceipt);
        ArrayList<SignedUpEventResponse> responses = new ArrayList<SignedUpEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SignedUpEventResponse typedResponse = new SignedUpEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.success = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SignedUpEventResponse> signedUpEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, SignedUpEventResponse>() {
            @Override
            public SignedUpEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SIGNEDUP_EVENT, log);
                SignedUpEventResponse typedResponse = new SignedUpEventResponse();
                typedResponse.log = log;
                typedResponse.success = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SignedUpEventResponse> signedUpEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SIGNEDUP_EVENT));
        return signedUpEventFlowable(filter);
    }

    public List<BoardLeftEventResponse> getBoardLeftEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(BOARDLEFT_EVENT, transactionReceipt);
        ArrayList<BoardLeftEventResponse> responses = new ArrayList<BoardLeftEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            BoardLeftEventResponse typedResponse = new BoardLeftEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.left = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<BoardLeftEventResponse> boardLeftEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, BoardLeftEventResponse>() {
            @Override
            public BoardLeftEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(BOARDLEFT_EVENT, log);
                BoardLeftEventResponse typedResponse = new BoardLeftEventResponse();
                typedResponse.log = log;
                typedResponse.left = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<BoardLeftEventResponse> boardLeftEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BOARDLEFT_EVENT));
        return boardLeftEventFlowable(filter);
    }

    public List<BoardRemovedEventResponse> getBoardRemovedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(BOARDREMOVED_EVENT, transactionReceipt);
        ArrayList<BoardRemovedEventResponse> responses = new ArrayList<BoardRemovedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            BoardRemovedEventResponse typedResponse = new BoardRemovedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.removed = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<BoardRemovedEventResponse> boardRemovedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, BoardRemovedEventResponse>() {
            @Override
            public BoardRemovedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(BOARDREMOVED_EVENT, log);
                BoardRemovedEventResponse typedResponse = new BoardRemovedEventResponse();
                typedResponse.log = log;
                typedResponse.removed = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<BoardRemovedEventResponse> boardRemovedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BOARDREMOVED_EVENT));
        return boardRemovedEventFlowable(filter);
    }

    public List<GroupAddedEventResponse> getGroupAddedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(GROUPADDED_EVENT, transactionReceipt);
        ArrayList<GroupAddedEventResponse> responses = new ArrayList<GroupAddedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            GroupAddedEventResponse typedResponse = new GroupAddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<GroupAddedEventResponse> groupAddedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, GroupAddedEventResponse>() {
            @Override
            public GroupAddedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(GROUPADDED_EVENT, log);
                GroupAddedEventResponse typedResponse = new GroupAddedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<GroupAddedEventResponse> groupAddedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(GROUPADDED_EVENT));
        return groupAddedEventFlowable(filter);
    }

    public List<BoardParticipantAddedEventResponse> getBoardParticipantAddedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(BOARDPARTICIPANTADDED_EVENT, transactionReceipt);
        ArrayList<BoardParticipantAddedEventResponse> responses = new ArrayList<BoardParticipantAddedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            BoardParticipantAddedEventResponse typedResponse = new BoardParticipantAddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.nick = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<BoardParticipantAddedEventResponse> boardParticipantAddedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, BoardParticipantAddedEventResponse>() {
            @Override
            public BoardParticipantAddedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(BOARDPARTICIPANTADDED_EVENT, log);
                BoardParticipantAddedEventResponse typedResponse = new BoardParticipantAddedEventResponse();
                typedResponse.log = log;
                typedResponse.nick = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<BoardParticipantAddedEventResponse> boardParticipantAddedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BOARDPARTICIPANTADDED_EVENT));
        return boardParticipantAddedEventFlowable(filter);
    }

    public List<TaskAddedEventResponse> getTaskAddedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TASKADDED_EVENT, transactionReceipt);
        ArrayList<TaskAddedEventResponse> responses = new ArrayList<TaskAddedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            TaskAddedEventResponse typedResponse = new TaskAddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<TaskAddedEventResponse> taskAddedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, TaskAddedEventResponse>() {
            @Override
            public TaskAddedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(TASKADDED_EVENT, log);
                TaskAddedEventResponse typedResponse = new TaskAddedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<TaskAddedEventResponse> taskAddedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TASKADDED_EVENT));
        return taskAddedEventFlowable(filter);
    }

    public List<TxCommitedEventResponse> getTxCommitedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TXCOMMITED_EVENT, transactionReceipt);
        ArrayList<TxCommitedEventResponse> responses = new ArrayList<TxCommitedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            TxCommitedEventResponse typedResponse = new TxCommitedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.commited = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<TxCommitedEventResponse> txCommitedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, TxCommitedEventResponse>() {
            @Override
            public TxCommitedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(TXCOMMITED_EVENT, log);
                TxCommitedEventResponse typedResponse = new TxCommitedEventResponse();
                typedResponse.log = log;
                typedResponse.commited = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<TxCommitedEventResponse> txCommitedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TXCOMMITED_EVENT));
        return txCommitedEventFlowable(filter);
    }

    public RemoteCall<TransactionReceipt> addBoard(String title) {
        final Function function = new Function(
                FUNC_ADDBOARD,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(title)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getUserNick(String user) {
        final Function function = new Function(FUNC_GETUSERNICK,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(user)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> addGroup(BigInteger boardId, String title) {
        final Function function = new Function(
                FUNC_ADDGROUP,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(boardId),
                        new org.web3j.abi.datatypes.Utf8String(title)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addTask(BigInteger groupId, String title) {
        final Function function = new Function(
                FUNC_ADDTASK,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(groupId),
                        new org.web3j.abi.datatypes.Utf8String(title)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setTaskDescription(BigInteger taskId, String description) {
        final Function function = new Function(
                FUNC_SETTASKDESCRIPTION,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(taskId),
                        new org.web3j.abi.datatypes.Utf8String(description)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setTaskTitle(BigInteger taskId, String title) {
        final Function function = new Function(
                FUNC_SETTASKTITLE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(taskId),
                        new org.web3j.abi.datatypes.Utf8String(title)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setTaskGroup(BigInteger taskId, BigInteger groupId) {
        final Function function = new Function(
                FUNC_SETTASKGROUP,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(taskId),
                        new org.web3j.abi.datatypes.generated.Int32(groupId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> removeTaskFromGroup(BigInteger taskId) {
        final Function function = new Function(
                FUNC_REMOVETASKFROMGROUP,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(taskId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setTaskStart(BigInteger taskId, BigInteger time) {
        final Function function = new Function(
                FUNC_SETTASKSTART,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(taskId),
                        new org.web3j.abi.datatypes.generated.Int64(time)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setTaskFinish(BigInteger taskId, BigInteger time) {
        final Function function = new Function(
                FUNC_SETTASKFINISH,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(taskId),
                        new org.web3j.abi.datatypes.generated.Int64(time)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setBoardStart(BigInteger boardId, BigInteger time) {
        final Function function = new Function(
                FUNC_SETBOARDSTART,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(boardId),
                        new org.web3j.abi.datatypes.generated.Int64(time)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setBoardFinish(BigInteger boardId, BigInteger time) {
        final Function function = new Function(
                FUNC_SETBOARDFINISH,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(boardId),
                        new org.web3j.abi.datatypes.generated.Int64(time)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addBoardParticipant(BigInteger boardId, String user) {
        final Function function = new Function(
                FUNC_ADDBOARDPARTICIPANT,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(boardId),
                        new org.web3j.abi.datatypes.Address(user)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> signIn() {
        final Function function = new Function(FUNC_SIGNIN,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> signUp(String nick) {
        final Function function = new Function(
                FUNC_SIGNUP,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(nick)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple5<String, BigInteger, BigInteger, List<BigInteger>, List<String>>> getBoard(BigInteger id) {
        final Function function = new Function(FUNC_GETBOARD,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int64>() {}, new TypeReference<Int64>() {}, new TypeReference<DynamicArray<Int32>>() {}, new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteCall<Tuple5<String, BigInteger, BigInteger, List<BigInteger>, List<String>>>(
                new Callable<Tuple5<String, BigInteger, BigInteger, List<BigInteger>, List<String>>>() {
                    @Override
                    public Tuple5<String, BigInteger, BigInteger, List<BigInteger>, List<String>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, BigInteger, BigInteger, List<BigInteger>, List<String>>(
                                (String) results.get(0).getValue(),
                                (BigInteger) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue(),
                                convertToNative((List<Int32>) results.get(3).getValue()),
                                convertToNative((List<Address>) results.get(4).getValue()));
                    }
                });
    }

    public RemoteCall<Tuple3<String, BigInteger, BigInteger>> getBoardCard(BigInteger id) {
        final Function function = new Function(FUNC_GETBOARDCARD,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int64>() {}, new TypeReference<Int64>() {}));
        return new RemoteCall<Tuple3<String, BigInteger, BigInteger>>(
                new Callable<Tuple3<String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (BigInteger) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteCall<List> getBoardsIndices() {
        final Function function = new Function(FUNC_GETBOARDSINDICES,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Int32>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<List> getGroupsIndices(BigInteger boardId) {
        final Function function = new Function(FUNC_GETGROUPSINDICES,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(boardId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Int32>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<Tuple2<String, List<BigInteger>>> getGroup(BigInteger groupId) {
        final Function function = new Function(FUNC_GETGROUP,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(groupId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<DynamicArray<Int32>>() {}));
        return new RemoteCall<Tuple2<String, List<BigInteger>>>(
                new Callable<Tuple2<String, List<BigInteger>>>() {
                    @Override
                    public Tuple2<String, List<BigInteger>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<String, List<BigInteger>>(
                                (String) results.get(0).getValue(),
                                convertToNative((List<Int32>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteCall<Tuple4<String, String, BigInteger, BigInteger>> getTask(BigInteger taskId) {
        final Function function = new Function(FUNC_GETTASK,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(taskId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int64>() {}, new TypeReference<Int64>() {}));
        return new RemoteCall<Tuple4<String, String, BigInteger, BigInteger>>(
                new Callable<Tuple4<String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple4<String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<String, String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> removeBoardFromUser(String userId, BigInteger boardId) {
        final Function function = new Function(
                FUNC_REMOVEBOARDFROMUSER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(userId),
                        new org.web3j.abi.datatypes.generated.Int32(boardId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> removeUserFromBoard(String userId, BigInteger boardId) {
        final Function function = new Function(
                FUNC_REMOVEUSERFROMBOARD,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(userId),
                        new org.web3j.abi.datatypes.generated.Int32(boardId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> leaveBoard(BigInteger id) {
        final Function function = new Function(
                FUNC_LEAVEBOARD,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(id)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> eraseBoard(BigInteger id) {
        final Function function = new Function(
                FUNC_ERASEBOARD,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int32(id)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Smart load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Smart(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Smart load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Smart(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Smart load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Smart(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Smart load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Smart(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Smart> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Smart.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Smart> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Smart.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<Smart> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Smart.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Smart> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Smart.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class BoardAddedEventResponse {
        public Log log;

        public BigInteger id;
    }

    public static class SignedUpEventResponse {
        public Log log;

        public Boolean success;
    }

    public static class BoardLeftEventResponse {
        public Log log;

        public Boolean left;
    }

    public static class BoardRemovedEventResponse {
        public Log log;

        public Boolean removed;
    }

    public static class GroupAddedEventResponse {
        public Log log;

        public BigInteger id;
    }

    public static class BoardParticipantAddedEventResponse {
        public Log log;

        public String nick;
    }

    public static class TaskAddedEventResponse {
        public Log log;

        public BigInteger id;
    }

    public static class TxCommitedEventResponse {
        public Log log;

        public Boolean commited;
    }
}
